name: CI/CD Pipeline

permissions:
  contents: read

on:
  push:
    branches: [main, develop, 'fix/*', 'feature/*']
  pull_request:
    branches: [main, develop]

jobs:
  quality:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          
      - name: Enable Corepack
        run: corepack enable
        
      - name: Install Yarn
        run: corepack prepare yarn@4.0.2 --activate
        
      - name: Install dependencies
        run: yarn install --immutable
        
      - name: Run linting
        run: yarn lint
        
      - name: Type checking
        run: yarn type-check
        
      - name: Format check
        run: yarn format:check

  test-frontend:
    name: Frontend Tests
    runs-on: ubuntu-latest
    needs: quality
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          
      - name: Enable Corepack
        run: corepack enable
        
      - name: Install Yarn
        run: corepack prepare yarn@4.0.2 --activate
        
      - name: Install dependencies
        run: yarn install --immutable
        
      - name: Run tests with coverage
        run: yarn test:coverage
        working-directory: apps/web
        
      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          files: ./apps/web/coverage/coverage-final.json
          flags: frontend

  test-backend:
    name: Backend Tests
    runs-on: ubuntu-latest
    needs: quality
    
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r apps/api/requirements-updated.txt
          pip install pytest pytest-cov
        
      - name: Run tests with coverage
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost/test_db
        run: |
          cd apps/api
          pytest --cov=src --cov-report=xml
          
      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          files: ./apps/api/coverage.xml
          flags: backend

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    needs: quality
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          
      - name: Enable Corepack
        run: corepack enable
        
      - name: Install Yarn
        run: corepack prepare yarn@4.0.2 --activate
        
      - name: Frontend security audit
        run: yarn audit --level moderate
        continue-on-error: true
        
      - name: Python security audit
        run: |
          pip install safety
          safety check --json
        continue-on-error: true

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [test-frontend, test-backend]
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          
      - name: Enable Corepack
        run: corepack enable
        
      - name: Install Yarn
        run: corepack prepare yarn@4.0.2 --activate
        
      - name: Install dependencies
        run: yarn install --immutable
        
      - name: Build project
        run: yarn build
        
      - name: Check bundle size
        run: |
          cd apps/web
          yarn check-bundle
          
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: apps/web/dist

  performance:
    name: Performance Check
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts
          path: apps/web/dist
          
      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v10
        with:
          configPath: './.lighthouserc.json'
          uploadArtifacts: true
          temporaryPublicStorage: true